name: Update sp Worker

on:
  workflow_dispatch:
    inputs:
      target_version:
        description: '要构建的特定版本 (例如: 3.3.16)'
        required: true # 手动执行时必须填写版本号
        default: 'v3.3.16'
      force_update:
        description: '是否强制更新（忽略版本检查）'
        required: false
        default: 'false'

permissions:
  contents: write

env:
  TARGET_REPO: bia-pain-bache/BPB-Worker-Panel
  # <-- 变动 1: 目标文件从 worker.zip 变为 _worker.js 
  # 注意：根据您的日志，目标仓库release中的文件名是 _worker.js
  TARGET_JS_FILE: worker.js 

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 检查并更新 Worker
        id: update_worker
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 日志函数
          log() { echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"; }

          # --- 手动执行逻辑 ---
          MODE="手动"
          TARGET_VERSION=${{ github.event.inputs.target_version }}
          log "手动模式启动，目标版本: $TARGET_VERSION"
          API_URL="https://api.github.com/repos/${TARGET_REPO}/releases/tags/${TARGET_VERSION}"

          log "从 $API_URL 获取 Release 信息..."
          RESPONSE=$(curl -s --retry 3 -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" "$API_URL")
          
          if [ $? -ne 0 ] || [[ "$RESPONSE" == *"Not Found"* ]]; then
            log "ERROR: 无法访问 GitHub API 或找不到指定版本。"
            exit 1
          fi

          TAG_NAME=$(echo "$RESPONSE" | jq -r '.tag_name')
          # <-- 变动 2: jq查询的目标从 $TARGET_ZIP_FILE 变为 $TARGET_JS_FILE
          DOWNLOAD_URL=$(echo "$RESPONSE" | jq -r '.assets[] | select(.name == "'"$TARGET_JS_FILE"'") | .browser_download_url')

          if [ -z "$DOWNLOAD_URL" ] || [ "$DOWNLOAD_URL" == "null" ]; then
            log "ERROR: 在版本 $TAG_NAME 中未找到 $TARGET_JS_FILE"
            exit 1
          fi
          log "成功获取版本 $TAG_NAME 的下载链接"
          
          # --- 文件处理逻辑（已简化） ---
          # <-- 变动 3: 直接下载JS文件，并命名为带版本号的新文件名
          OUTPUT_FILE="${TARGET_JS_FILE%.*}-${TAG_NAME}.js" # 生成如 _worker-v3.3.16.js 的文件名
          log "下载 $TARGET_JS_FILE 并保存为 $OUTPUT_FILE..."
          wget -q -O "$OUTPUT_FILE" "$DOWNLOAD_URL"
          
          # <-- 变动 4: 不再需要解压和重命名步骤
          
          COMMIT_MSG="📦 手动构建指定版本 Worker: $TAG_NAME"
          
          # 将提交信息设置为步骤输出
          echo "commit_message=$COMMIT_MSG" >> $GITHUB_OUTPUT
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: 提交更改
        if: steps.update_worker.conclusion == 'success'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: ${{ steps.update_worker.outputs.commit_message }}
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
